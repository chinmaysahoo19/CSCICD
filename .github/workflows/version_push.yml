name: Increment Version & Create Tag
on:
  workflow_dispatch:
    inputs:
      increment_type:
        description: Choose Increment Type From Option
        type: choice
        options:
          - major
          - minor
          - patch


env:
  GIT_SSH_PK: ${{ secrets.GIT_SSH_PK }}
jobs:
  print-tag:
    runs-on: ubuntu-latest
    name: Increment Version & Create Tag
    steps:
      - name: "Git Config"
        run: |
          mkdir -p ~/.ssh
          echo "$GIT_SSH_PK" | base64 -d >~/id_rsa &&
          ssh-keyscan github.com > ~/.ssh/known_hosts
          cp ~/id_rsa  ~/.ssh/ && chmod -R 700 ~/.ssh && chmod -R 400 ~/.ssh/*
          git config --global --add safe.directory "*"
          git config --global user.name "Github Action "
          git config --global user.email "githubaction@github.com"

      - name: Clone Repo
        run: |
          env
          git clone  git@github.com:${GITHUB_REPOSITORY}.git .

      - name: Validate Version
        run: |
         
          cd app
          git pull
          git describe --abbrev=0 --tags
          GIT_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          PACKAGE_VERSION=v$(jq -r '.version' package.json)
          if [[ "${GIT_TAG}" != "${PACKAGE_VERSION}" ]]; then
            echo -e "\e[31mVersion does not match latest tag. Please change version in version.json to '${GIT_VERSION}'\e[39m"
          exit 1
          fi
      - name: Version Push
        run: |
          BUMP_VERSION_MESSAGE='Version Push'
          cd app
          git checkout stage
          git reset --hard origin/stage
          yarn version --${{ inputs.increment_type }} --no-git-tag-version --no-commit-hooks
          version=$(jq -r '.version' package.json)
          git add package.json
          git commit -m "$BUMP_VERSION_MESSAGE $version"
          git push origin stage
          git checkout prod
          git merge --no-ff stage
          git tag -d v$version || true
          git tag v$version
          git push origin v$version
          git push origin prod
          git checkout master
          git merge --no-ff stage
