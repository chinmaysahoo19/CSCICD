run-name: "First CICD  by @${{ github.actor }}"
on:

  push:
    branches:
      - master
    tags:
      - 'v*'

env:
  myname: CHINMAYA

jobs:

  build:
    name: build_job1
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name : GITHUB_REF_NAME
        run: "echo GITHUB_REF_NAME: ${GITHUB_REF_NAME}"
      - name: GITHUB_REF_TYPE
        run: "echo GITHUB_REF_TYPE :  ${GITHUB_REF_TYPE}"
      - name: GITHUB_REF
        run: "echo GITHUB_REF :  ${GITHUB_REF}"
      - name: GITHUB_BASE_REF
        run: "echo GITHUB_BASE_REF :  ${GITHUB_BASE_REF}"
      - run:  echo "MYENV=prod" >> $GITHUB_ENV
      - name: Get the buildinfo
        id: get_buildinfo

        run: |
          
          if [[ ${GITHUB_REF_TYPE} == "tag" ]];then
             echo "REACT_APP_GIT_SHA=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          else
             echo "REACT_APP_GIT_SHA=${{github.sha}}" >> $GITHUB_ENV
          fi
          
          case "${GITHUB_REF_NAME}" in
             "master" || "v[0-9]*.[0-9]*.[0-9]*")
               SECRET_ENV_NAME=DEV
               #echo "REACT_APP_CLIENTKEY=${{ secrets.DEV_REACT_APP_CLIENTKEY }}" >> $GITHUB_ENV
               ;;
             "stage")
               SECRET_ENV_NAME=STAGE
               #echo "REACT_APP_CLIENTKEY=${{ secrets.STAGE_REACT_APP_CLIENTKEY }}" >> $GITHUB_ENV
             ;;
             "prod") 
                SECRET_ENV_NAME=PROD
                #echo "REACT_APP_CLIENTKEY=${{ secrets.PROD_REACT_APP_CLIENTKEY }}" >> $GITHUB_ENV
             ;;
           *)
             SECRET_ENV_NAME=PR
          ;;
          esac
          env
          GID=${{ env.MYENV }}
          echo $GID
          sed -e "s/G-W89RTWJ776/$GID/g" index.html
          echo "xxxxxxxx - ${{ secrets.STAGE_API_KEY }} "
          echo "ddddd - ${{ vars.YOURNAME }}"
          echo "API_KEY=${{ secrets[format('{0}_API_KEY', env.MYENV)] }}"
          pwd
          ls -altr
          ./.github/workflows/setupenv.sh
          # GIT_SHA=`echo -n ${{github.sha}}`
          # echo ::set-output name=GIT_SHA::${GIT_SHA}  ## Git latest SHA hash
          # echo "myname=chinmaya" >> $GITHUB_OUTPUT
          # echo "GIT_SHA=${GIT_SHA}" >> $GITHUB_OUTPUT
          env

      - name: Building Nodejs
        uses: actions/setup-node@v3
        with:
            node-version:  '16.16.0'
      - name: Build
        run: |
          echo ${{ github.base_ref }}
          echo ${{ github.ref_name }}
          npm install
          pwd
          ls -altr
          echo -n ${{github.sha}}
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: node-app
          path: /home/runner/work/CSCICD/CSCICD
    outputs:
      git_sha: ${{ steps.get_buildinfo.outputs.git_sha }}
      myname: ${{ steps.get_buildinfo.outputs.myname }}
      env_name: "STAGE"


  deploy:
    needs: build
    if: github.event_name == 'push' &&  (github.ref_name == 'master' || github.ref_name == 'stage' || github.ref_name == 'develop')
    uses: ./.github/workflows/callme1.yml
    secrets: inherit
      #secret_name: ${{ secrets.STAGE_API_KEY }}
    with:
      image_name: ${{ vars.YOURNAME }}
      env_name: "${{ needs.build.outputs.env_name }}"

#
#  deploy-dev:
#    environment: dev
#    name: "deploy-dev"
#    runs-on: ubuntu-latest
#    needs: build
#    if: github.event_name == 'push' &&  github.ref_name == 'develop'
#    steps:
#      - run: |
#          pwd
#          ls  -ltr
#
#      - name: Download artifact from build job
#        uses: actions/download-artifact@v3
#        with:
#          name: node-app
#          path: /home/runner/work/CSCICD/CSCICD
#      - run: |
#         env
#         echo "I am deploy"
#         pwd
#         ls  -altr
#         echo "${{ needs.build.outputs.output1 }}"
#          echo "${{ needs.build.outputs.git_sha }}"
#      - name: Branch Name
#        run: "echo running on BRANCH_NAME: ${{ github.base_ref || github.ref_name }}"
#  deploy-stage:
#    environment: stage
#    name: "deploy-stage"
#    runs-on: ubuntu-latest
#    needs: build
#    if: github.event_name == 'push' &&  github.ref_name == 'stage'
#    steps:
#      - run: echo "I am deploy"
#      - name: Branch Name
#        run: "echo running on BRANCH_NAME: ${{ github.base_ref || github.ref_name }}"
#
#  deploy-prod:
#    environment: prod
#    name: "deploy-prod"
#    runs-on: ubuntu-latest
#    needs: build
#    if: github.event_name == 'push' &&  github.ref_name == 'master'
#    steps:
#      - run: echo "I am deploy"
#      - name: Branch Name
#        run: "echo running on BRANCH_NAME: ${{ github.base_ref || github.ref_name }}"
